<!DOCTYPE html>
<html>
    <head>
        <title>Задача <%= parseInt(task.identificator.split('_')[1])+1 %></title>

        <meta charset="utf-8">
        <meta name="viewport"
              content="width=device-width, initial-scale=1.0,
              maximum-scale=1.0, minimum-scale=1.0,
              user-scalable=no, minimal-ui">
        <meta name="full-screen" content="yes">
        <link rel="preconnect" href="https://fonts.gstatic.com">
        <link href="https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap" rel="stylesheet">
        </head>
    <body>
        <main>
        <div id="task">
        <H1 id="taskname"><%= task.title %></H1>
        <div style="text-align: center;">
            <% if(isTeacher){ %>
                <a id="editref" class="editref" href=<%= "/quiz/task/edit/" + quiz.identificator +'/' + task.identificator %> >[Редактировать]</a>
                <% if(!quiz.hasActiveLesson){ %>
                <span class="taskPopup">
                    <dialog  id='dialog_delete'>
                    <form action= <%="/quiz/task/delete/" + quiz.identificator +'/'  + task.identificator %>  method="POST">
                        Вы действительно хотите удалить задачу "<%= task.title %>" ?
                        <button>Да</button>
                    </form>
                    <button onClick='c_delete();'>Назад</button>
                    </dialog>
                <button onClick='o_delete();' class="show" >[Удалить]</button>
                </span>
            <% }} %>
        </div>
        <div class="statement">
<%= task.statement %>
            <h5>Входные данные</h5>
<%= task.input %>
            <h5>Выходные данные</h5>
<%= task.output %>
        </div>
        </div>
        <table id="examples" class='taskslist' style="width: 60%; min-width: 60%;">
            <tr>
              <th>Example Input</th>
              <th>Example Output</th>
              </tr>
            <% for (var i = 0; i < task.examples.length; i++) { %>
            <% var example = task.examples[i]; %>
             <tr>
              <td style="word-wrap: break-word;"><%= example[0] %></td>
              <td style="word-wrap: break-word;"><%= example[1] %></td>
             </tr>
            <% } %>
        </table>
        <form action=<%='/quiz/task/page/' + quiz.identificator + '/' + task.identificator %>  method="POST" enctype="multipart/form-data">
            <div class="container">
                <select name="languageSelector" id = "languageSelector">
                    <option class="opt" value="Pascal" selected >Pascal ABC.NET</option>
                    <option class="opt" value="Python" >Python 3.8</option>
                    <option class="opt" value="PyPy">PyPy 3.7</option>
                    <option class="opt" value="Cpp" >C++20</option>
                    <option class="opt" value="Java">Java 16</option>
                </select>
                    <div class="imgs">
                        <img src="\public\media\TopLeft.svg">
                        <img src="\public\media\TopRight.svg">
                    </div>
                    <textarea class="taskarea" id="code" name = "code" placeholder="Place code here" style="font-family: 'Source Code Pro', monospace;"></textarea>
                    <input name="file" id="dragdrop" type="file" style="display: none;" accept=".pas, .java, .cpp, .py">
                    <div class="taskarea"  id="result" name="result"></div>
                    <div class="imgsbottom">
                        <img src="\public\media\BottomLeft.svg">
                        <img src="\public\media\BottomRight.svg">
                    </div>
                 <input type="file" name="file" id="codefile">
            </div>
            <div id="submitdiv">
                <button id="submit">Отправить</button>
            </div>
        </form>
        <% if(!isTeacher){ %>
            <p class="countDownTimer" id="countDownTimer" style="position:fixed; left: 22%; right:auto; top:20px"></p>
        <% } %>
        <div class="tasksSuccessError" id="linksarea"></div>
    </main>
    </body>
    <script type = text/javascript>
        let min = (a, b) => {if(a>b)return b;return a;};
        let prevTableL="";
        function updateOther(ids) {
            fetch("/api/task/get/testverdicts/<%= login %>/"+ids).then(response=>response.json()).then(response => {
                    text = "";
                    let id = "<%= ID %>";
                    let tasks = response.tasks;
                    let statuses = response.success;
                    for(let i=0; i<min(tasks.length, statuses.length); i++){
                        if(tasks[i].identificator == id)
                            text+=`\n<a class="tasklink ${statuses[i]}" style="outline: solid black 4px; outline-offset: -4px; font-size: 1.2rem; font-weight: bolder;">${parseInt(tasks[i].identificator.split('_')[1])+1}</a>`;
                        else
                            text+=`\n<a class="tasklink ${statuses[i]}" href="/quiz/task/page/<%= quiz.identificator  %>/${tasks[i].identificator}">${parseInt(tasks[i].identificator.split('_')[1])+1}</a>`;
                    }
                    if(prevTableL != text){
                        linksarea.innerHTML = text;
                        prevTableL = text;
                    }
                }).catch(err => console.log(err));
        }
        let linksarea = document.getElementById("linksarea");
        let ids = "<%= ids %>";
        updateOther(ids);
        setInterval(() => {
            updateOther(ids);
        }, 5000);
    </script>
    <script>
        let prevTable="";
        function update(){
            fetch("/api/task/get/testresults/"+task).then(response=>response.json()).then(response => {
                text = "<ul>";
                response.result.forEach(item => {
                    text+="\n"+`<li>${item[0]} <a id=${item[2]}>${item[1]}</a></li>`
                });
                text +="\n</ul>";
                if(inputarea.value == ""){
                    inputarea.value = response.code;
                    for(let i = 0; i < options.length; i++){
                        options[i].selected = false;
                        if(options[i].value == response.language){
                            options[i].selected = true;
                        }
                    }
                }
                if(response.status == "testing"){
                    inputarea.readOnly = true;
                    inputarea.placeholder = "";
                    document.getElementById("languageSelector").style.visibility = "hidden";
                }else{
                    document.getElementById("languageSelector").style.visibility = "visible";
                    inputarea.readOnly = false;
                    inputarea.placeholder = "Place code or drop file here";
                }
                if(prevTable != text){
                    resultsarea.innerHTML = text;
                    prevTable = text;
                }
            }).catch(err => console.log(err));
        }
        let resultsarea = document.getElementById("result");
        let inputarea = document.getElementById("code");
        let options = document.getElementsByClassName("opt");
        let text;
        let task = "<%= task.identificator %>";
        let quiz_id = "<%= quiz.identificator %>";
        let grade = "<%= grade %>";
        let testing;
        update();
        setInterval(() => {
            update();
        }, 5000);
    </script>
    <script type = text/javascript>
        function o_delete() {
            document.getElementById('dialog_delete').showModal();
        }
        function c_delete() {
            document.getElementById('dialog_delete').close();
        }
    </script>
<% if(!isTeacher){ %>
    <script>
        function getTime(){
            fetch("/api/quiz/get/time/" + quiz_id + "/" + grade).then(response=>response.json()).then(response => {
                if(!response.error)
                    whenEnds = new Date(response.whenEnds).getTime();
            }).catch(err => console.log(err));
        }
        let whenEnds;
        getTime();
        setInterval(() => {
                getTime();
            }, 3000);

        setInterval(() => {
            let countDownDate = new Date(whenEnds).getTime();
            var now = Date.now();
            var distance = countDownDate - now;
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);
            if (days>0)
                document.getElementById("countDownTimer").innerHTML = "Окончание через "+ days + " дней " + ("0"+hours).slice(-2) + ":"
                    + ("0"+minutes).slice(-2) + ":" + ("0"+seconds).slice(-2);
            else
                document.getElementById("countDownTimer").innerHTML = "Окончание через "+ ("0"+hours).slice(-2) + ":"
                    + ("0"+minutes).slice(-2) + ":" + ("0"+seconds).slice(-2);
            if (distance < 0) {
                if(<%= !isTeacher %>)
                    window.location.reload()
                document.getElementById("countDownTimer").innerHTML = "Окончен";
            }
        }, 1000);
    </script>
<% } %>
<script>
    let drop = document.getElementById("code");
        let fileInput = document.getElementById("dragdrop");
        drop.ondragover = drop.ondragenter = (evt) => {
            evt.preventDefault();
        }
        drop.ondrop = (evt) => {
            fileInput.files = evt.dataTransfer.files;
            drop.value = "\n\n\tВыбранный файл: " + fileInput.files[0].name;
            drop.readOnly = true;
            evt.preventDefault();
        }
</script>
</html>