<!DOCTYPE html>
<html>

<head>
  <title>Контрольная работа #<%= parseInt(quiz.identificator)+1 %>
  </title>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0,
          maximum-scale=1.0, minimum-scale=1.0,
          user-scalable=no, minimal-ui">
  <meta name="full-screen" content="yes">
  <link rel="stylesheet" href="/public/css/layout.css" type="text/css">
</head>

<body>
  <main>
    <div id="task">
      <H1 id="taskname">
        <%= quiz.title; %>
      </H1>
      <div style="text-align: center;margin: 5%;">
        <% if(isTeacher){ %>
          <span class="tourPopup">
            <dialog id='start'>
              <form action=<%=`/quiz/start/${quiz.identificator}` %> method="POST">
                <h3 class="h3">Класс</h3>
                <input type="text" name="grade" id="grade" style="width: 3rem; margin: .4rem;">
                <br>
                <button style="margin: .2rem;">Начать</button>
              </form>
              <button onClick='c("start");'>Отмена</button>
            </dialog>
            <button onClick='o("start");' class="show EditButtons"
              style="background-color: pink; padding: 1rem;">Начать</button>
          </span>
          <br>
          <a class="EditButtons" href=<%=`/quiz/edit/${quiz.identificator}` %> >Редактировать</a>
          <span class="tourPopup">
            <dialog id='delete'>
              <form action=<%="/quiz/delete/" + quiz.identificator %> method="POST">
                Вы действительно хотите удалить работу "<%= quiz.title %>" ?
                  <button>Да</button>
              </form>
              <button onClick='c("delete");'>Назад</button>
            </dialog>
            <button onClick='o("delete");' class="show EditButtons" style = "margin-bottom: 2rem;">Удалить</button>
          </span>
          <% if(!quiz.isBegan) { %>
            <a class="EditButtons" href=<%="/quiz/task/add/" + quiz.identificator %> >Добавить задачу</a><% } %>
            <% } %>
        <br>
        <a class="EditButtons" href=<%="/quiz/results/" + quiz.identificator + "/teacher" %> style="background-color: lightgreen; padding: 1rem;" >Панель управления</a>
      </div>
      <h4 class="h4">Автор: <%= quiz.author %>&nbsp;&nbsp;&nbsp;&nbsp;Длительность: <%= quiz.duration %> минут</h4>
      <div style="margin-left: 20px;" id="statement"><%= quiz.description %></div>
    </div>
    <div id="table"></div>
    <% if(!isTeacher){ %>
      <p class="countDownTimer" id="countDownTimer" style="left: 5rem; right:auto; top:20px"></p>
    <% } %>
    <div id="times" style="position: fixed;top: .2rem; right: .2rem;"></div>
  </main>
</body>
<script>
  function o(id) {
    document.getElementById(id).showModal();
  }
  function c(id) {
    document.getElementById(id).close();
  }
</script>
<script>
  let min = (a, b) => {if(a>b)return b;return a;};
  let prevTable="";
  function update(ids) {
    let text = "<table class='taskslist'><tr>\n<th>ID</th>\n<th>Задача</th>\n<th>Вердикт</th>\n</tr>";
    fetch("/api/task/get/testverdicts/<%= login %>/" + ids).then(response => response.json()).then(response => {
      let tasks = response.tasks;
      let verdicts = response.verdicts;
      for (let i = 0; i < min(tasks.length, verdicts.length); i++) {
        text += `\n<tr>\n<td>${parseInt(tasks[i].identificator.split('_')[1]) + 1}</td>\n<td> <a class="tlrefs" href="/quiz/task/page/${<%= quiz.identificator %>}/${tasks[i].identificator}">${tasks[i].title}</a></td>\n <td> ${ verdicts[i] }</td>\n</tr >`;
        }
        text+="\n</table>";
        if(prevTable != text){
          resultsarea.innerHTML = text;
          prevTable = text;
        }
    }).catch(err => console.log(err));
  }
  let resultsarea = document.getElementById("table");
  let ids = "<%= ids %>";
  update(ids);
  setInterval(() => {
      update(ids);
  }, 5000);
</script>
<% if( isTeacher && quiz.hasActiveLesson ){ %>
  <script>
    function getTime(){
      fetch("/api/quiz/get/time/<%= quiz.identificator %>/<%= grade %>").then(response=>response.json()).then(response => {
        if(!response.error)
            whenEnds = new Date(response.whenEnds).getTime();
      }).catch(err => console.log(err));
    }
    let whenEnds;
    getTime();
    setInterval(() => {
      getTime();
    }, 3000);

    setInterval(() => {
      let countDownDate = new Date(whenEnds).getTime();
      var now = Date.now();
      var distance = countDownDate - now;
      var days = Math.floor(distance / (1000 * 60 * 60 * 24));
      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      var seconds = Math.floor((distance % (1000 * 60)) / 1000);
      if (days>0)
        document.getElementById("countDownTimer").innerHTML = "Окончание через "+ days + " дней " + ("0"+hours).slice(-2) + ":"
            + ("0"+minutes).slice(-2) + ":" + ("0"+seconds).slice(-2);
      else
        document.getElementById("countDownTimer").innerHTML = "Окончание через "+ ("0"+hours).slice(-2) + ":"
            + ("0"+minutes).slice(-2) + ":" + ("0"+seconds).slice(-2);
      if (distance < 0) {
        if(<%= !isTeacher %>)
          window.location.reload()
        document.getElementById("countDownTimer").innerHTML = "Окончен";
      }
    }, 1000);
  </script>
  <script>
    async function updateWhenEnds(grades){
      let text = ""
      for(let i = 0; i<grades.length; i++){
        let response = await fetch(`/api/quiz/get/time/<%= quiz.identificator %>/${grades[i].toLowerCase()}`).then(response=>response.json());
        if(!response.error){
          text+=`<p class="countDownTimer whenEnds" id="countDownTimer"><a class="tlrefs" href="/quiz/results/<%= login %>/${grades[i]}"><b>${grades[i].toUpperCase()}</b></a> --- ${response.whenEnds}</p>`;
        }
      }
      times.innerHTML = text;
    }
    let grades = "<%= quiz.lessons.filter(item => !item.isEnded).map(item=> item.grade).join("|") %>".split('|');
    let times = document.getElementById("times");
      updateWhenEnds(grades);
      setInterval(() => {
        updateWhenEnds(grades);
      }, 10000);
  </script>
<% } %>
</html>