<!DOCTYPE html>
<html>

<head>
  <title>Результаты урока</title></title>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0,
              maximum-scale=1.0, minimum-scale=1.0,
              user-scalable=no, minimal-ui">
  <meta name="full-screen" content="yes">

  <link rel="stylesheet" href="/public/css/layout.css" type="text/css">
</head>

<body>
  <main>
    <h1><%= (grade == "teacher" ? `Посылки учителей урока \"${quiz.title}\"` : `Результаты урока \"${quiz.title}\" класса ${grade.toUpperCase()}`) %></h1>
    <div style="display: flex; flex-direction: row; gap:5px; margin-left: 120px;">
      <form action="/quiz/results/<%= quiz.identificator %>/<%= grade %>" method="post">
        <select name="gradeSelector" id = "gradeSelector">
            <% for(let i = 0; i < quiz.lessons.length; i++){ %>
              <option value="<%= quiz.lessons[i].grade %>" <%= quiz.lessons[i].grade.toLowerCase()==grade.toLowerCase()?"selected":"" %> ><%= quiz.lessons[i].grade.toUpperCase() %></option>
            <% } %>
        </select>
        <button>Показать</button>
      </form>
      <% if(!(grade=="teacher")){ %>
        <div>
          <dialog id="addtime">
            <h3 class = "h3">Время в минутах которое необходимо добавить</h3>
            <input type="number" name="time" id="time">
            <button id="comfirmButton">Добавить</button>
            <button id="cancelButton">Отмена</button>
          </dialog>
          <button id="addtimebutton">Добавить время</button>
        </div>
        <div>
          <dialog id="droptime">
            <h3 class = "h3">Вы уверены что хотите завершить контрольную работу</h3>
            <button id="comfirmDropButton">Завершить</button>
            <button id="cancelDropButton">Отмена</button>
          </dialog>
          <button id="droptimebutton">Завершить</button>
        </div>
      <% } %>
    </div>
    <table class='taskslist noPages' id="table"></table>
    <% if(!(grade=="teacher")){ %>
      <p class="countDownTimer" id="countDownTimer" style="left: auto; right:1rem; top:20px"></p>
    <% } %>
  </main>
  <script>
    let min = (a, b) => { if (a > b) return b; return a; };
    let prevTable="";
    function update(first) {
      if (first || <%= !quiz.isEnded %>){
        fetch("/api/quiz/get/results/<%= quiz.identificator %>/<%= lesson.grade %>").then(response => response.json()).then(response => {
          let text = "<tr>\n<th>LOGIN</th><th>Имя</th>\n";
          let results = response;
          for (let i = 0; i < results[0].tasks.length; i++) {
            text += `<th><a class="tlrefs" href="/quiz/task/page/<%= quiz.identificator %>/Q<%= quiz.identificator %>_${i}">${i + 1}</a></th>`;
          }
          text += "\n<th>Счёт</th>\n";
          results.sort((a, b) => {
            if ((a.sumscore > b.sumscore) || ((a.sumscore == b.sumscore) && (a.sumtime < b.sumtime)))
              return -1;
            else
              return 1;
          });
          let result, links, loginToShow, task;
          for (let i = 0; i < results.length; i++) {
            result = results[i];
            text += "<tr>\n";
            if (result) {
              text += `<td><a class="tlrefs" href="/account/${result.login}/1/default&all">${result.login}</a></td>\n`;
              text += `<td>${result.name}</td>\n`;
              for (let j = 0; j < result.tasks.length; j++) {
                task = result.tasks[j];
                links = "";
                task.attempts.reverse().forEach(attempt => {
                  if (attempt.score == "100")
                    links += `<a href="/quiz/attempt/<%= quiz.identificator %>/${result.login}/${attempt.date}" class="success">100</a>`;
                  else
                    links += `<a href="/quiz/attempt/<%= quiz.identificator %>/${result.login}/${attempt.date}" class="error">${attempt.score}</a>`;
                });
                text += `<td class="hasDropDown"><div class="resulttext">${task.score}(${task.tries})</div><div class = "dropdown-content">${links}</div></td>`
              }
              text += `<td>${result.sumscore}</td>\n`;
            }
            text += "</tr>\n"
          }
          if(prevTable != text + "</tr>\n"){
            resultsarea.innerHTML = text + "</tr>\n";
            prevTable = text + "</tr>\n"
          }
        }).catch(err => console.log(err));
      }
    }
    let resultsarea = document.getElementById("table");
    update(true);
    setInterval(() => {
      update(false);
    }, 5000);
  </script>
  <script>
    let addTime = document.getElementById("addtime");
    let showButton = document.getElementById("addtimebutton");
    let comfirmButton = document.getElementById("comfirmButton");
    let cancelButton = document.getElementById("cancelButton");
    let timeInput = document.getElementById("time");
    showButton.addEventListener("click", () => {
      addTime.showModal();
    });
    cancelButton.addEventListener("click", () => {
      addTime.close();
    });
    comfirmButton.addEventListener("click", () => {
      let time = timeInput.value*60*1000;
      addTime.close();
      fetch("/quiz/set/time", {
        method: "POST",
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        mode: "cors",
        credentials: "same-origin",
        body: JSON.stringify({
          quiz_id : "<%= quiz.identificator  %>",
          grade: "<%= grade %>",
          time
        })
      })
    });
</script>
<script>
  let quiz_id = "<%= quiz.identificator %>";
  let grade = "<%= grade %>";
  let whenEnds = 0;
  async function getTime(){
    let response = await fetch("/api/quiz/get/time/" + quiz_id + "/" + grade).then(response=>response.json())
    if(response.error)
      return 0
    return new Date(response.whenEnds).getTime();
  }

  let dropTime = document.getElementById("droptime");
  let showDropButton = document.getElementById("droptimebutton");
  let comfirmDropButton = document.getElementById("comfirmDropButton");
  let cancelDropButton = document.getElementById("cancelDropButton");

  showDropButton.addEventListener("click", () => {
    dropTime.showModal();
  });
  cancelDropButton.addEventListener("click", () => {
    dropTime.close();
  });
  comfirmDropButton.addEventListener("click", ()=>{
    getTime().then(whenEnds =>{
      let time = Date.now()- whenEnds;
      dropTime.close();
      fetch("/quiz/set/time", {
          method: "POST",
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },
          mode: "cors",
          credentials: "same-origin",
          body: JSON.stringify({
            quiz_id : "<%= quiz.identificator  %>",
            grade: "<%= grade %>",
            time
          })
      });
    });
  });
</script>
<% if(!(grade == "teacher")){ %>
  <script>
    function getTime2(){
      fetch("/api/quiz/get/time/<%= quiz.identificator %>/<%= grade %>").then(response=>response.json()).then(response => {
        if(!response.error)
            whenEnds2 = new Date(response.whenEnds).getTime();
      }).catch(err => console.log(err));
    }
    let whenEnds2;
    getTime2();
    setInterval(() => {
      getTime2();
    }, 3000);

    setInterval(() => {
      let countDownDate = new Date(whenEnds2).getTime();
      var now = Date.now();
      var distance = countDownDate - now;
      var days = Math.floor(distance / (1000 * 60 * 60 * 24));
      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      var seconds = Math.floor((distance % (1000 * 60)) / 1000);
      if (days>0)
        document.getElementById("countDownTimer").innerHTML = "Окончание через "+ days + " дней " + ("0"+hours).slice(-2) + ":"
            + ("0"+minutes).slice(-2) + ":" + ("0"+seconds).slice(-2);
      else
        document.getElementById("countDownTimer").innerHTML = "Окончание через "+ ("0"+hours).slice(-2) + ":"
            + ("0"+minutes).slice(-2) + ":" + ("0"+seconds).slice(-2);
      if (distance < 0) {
        document.getElementById("countDownTimer").innerHTML = "Окончен";
      }
    }, 1000);
  </script>
<% } %>
</html>
